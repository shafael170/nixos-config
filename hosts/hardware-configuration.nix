# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/73c76959-a86f-4880-b5c5-3b8af35288a9";
      fsType = "btrfs";
      options = [ "subvol=@" "noatime" "compress=zstd:3" "ssd" "discard=async" "space_cache=v2" "commit=120" ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/73c76959-a86f-4880-b5c5-3b8af35288a9";
      fsType = "btrfs";
      options = [ "subvol=@nix" "noatime" "compress=zstd:3" "ssd" "discard=async" "space_cache=v2" "commit=120" ];
    };

  fileSystems."/var/cache" =
    { device = "/dev/disk/by-uuid/73c76959-a86f-4880-b5c5-3b8af35288a9";
      fsType = "btrfs";
      options = [ "subvol=@cache" "noatime" "compress=zstd:3" "ssd" "discard=async" "space_cache=v2" "commit=120" ];
    };

  fileSystems."/var/lib/machines" =
    { device = "/dev/disk/by-uuid/73c76959-a86f-4880-b5c5-3b8af35288a9";
      fsType = "btrfs";
      options = [ "subvol=@machines" "noatime" "compress=zstd:3" "ssd" "discard=async" "space_cache=v2" "commit=120" ];
    };

  fileSystems."/var/lib/portables" =
    { device = "/dev/disk/by-uuid/73c76959-a86f-4880-b5c5-3b8af35288a9";
      fsType = "btrfs";
      options = [ "subvol=@portables" "noatime" "compress=zstd:3" "ssd" "discard=async" "space_cache=v2" "commit=120" ];
    };

  fileSystems."/var/log" =
    { device = "/dev/disk/by-uuid/73c76959-a86f-4880-b5c5-3b8af35288a9";
      fsType = "btrfs";
      options = [ "subvol=@log" "noatime" "compress=zstd:3" "ssd" "discard=async" "space_cache=v2" "commit=120" ];
    };

  fileSystems."/var/spool" =
    { device = "/dev/disk/by-uuid/73c76959-a86f-4880-b5c5-3b8af35288a9";
      fsType = "btrfs";
      options = [ "subvol=@spool" "noatime" "compress=zstd:3" "ssd" "discard=async" "space_cache=v2" "commit=120" ];
    };

  fileSystems."/var/tmp" =
    { device = "/dev/disk/by-uuid/73c76959-a86f-4880-b5c5-3b8af35288a9";
      fsType = "btrfs";
      options = [ "subvol=@tmp" "noatime" "compress=zstd:3" "ssd" "discard=async" "space_cache=v2" "commit=120" ];
    };

  fileSystems."/srv" =
    { device = "/dev/disk/by-uuid/73c76959-a86f-4880-b5c5-3b8af35288a9";
      fsType = "btrfs";
      options = [ "subvol=@srv" "noatime" "compress=zstd:3" "ssd" "discard=async" "space_cache=v2" "commit=120" ];
    };

  fileSystems."/swap" =
    { device = "/dev/disk/by-uuid/73c76959-a86f-4880-b5c5-3b8af35288a9";
      fsType = "btrfs";
      options = [ "subvol=@swap" "noatime" "compress=zstd:3" "ssd" "discard=async" "space_cache=v2" "commit=120" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/b51094ee-d061-41f9-872d-6d5ecf4a6bcc";
      fsType = "btrfs";
      options = [ "noatime" "compress=zstd:3" "ssd" "discard=async" "space_cache=v2" "commit=120" ];

    };

  fileSystems."/media/extra" =
    { device = "/dev/disk/by-uuid/7884201a-57ea-4e2b-b2f8-85dc414b1b6d";
      fsType = "btrfs";
      options = [ "noatime" "compress=zstd:3" "ssd" "discard=async" "space_cache=v2" "commit=120" ];

    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/1bcc23be-a9e6-4ccb-839e-91ba8908286c";
      fsType = "ext4";
    };

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/003D-3A86";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices = [{
    device = "/swap/swapfile";
    priority = 100;
    discardPolicy = "both";
  }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  # networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
